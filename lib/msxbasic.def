lstoff

; MSX BASIC and SYSTEM VARIABLES definitions
;
; December 2007
; $Id: msxbasic.def,v 1.2 2007/12/19 10:00:27 stefano Exp $
;


; System variables

defc VDP_RP  = $0006	; address of vdp READ port
defc VDP_WP  = $0007	; address of vdp WRITE port
defc MSX_VER = $002D    ; MSX version (0 = MSX1, 1 = MSX2)

defc RDPRIM = $F380	;5 Routine that reads from a primary slot 
defc WRPRIM = $F385	;7 Routine that writes to a primary slot 
defc CLPRIM = $F38C	;14 Routine that calls a routine in a primary slot 
defc USRTAB = $F39A	;2 Address to call with Basic USR0 
defc USR0 = $F39A	;2 Address to call with Basic USR0 
defc USR1 = $F39C	;2 Address to call with Basic USR1 
defc USR2 = $F39E	;2 Address to call with Basic USR2 
defc USR3 = $F3A0	;2 Address to call with Basic USR3 
defc USR4 = $F3A2	;2 Address to call with Basic USR4 
defc USR5 = $F3A4	;2 Address to call with Basic USR5 
defc USR6 = $F3A6	;2 Address to call with Basic USR6 
defc USR7 = $F3A8	;2 Address to call with Basic USR7 
defc USR8 = $F3AA	;2 Address to call with Basic USR8 
defc USR9 = $F3AC	;2 Address to call with Basic USR9 
defc LINL40 = $F3AE	;1 Width for SCREEN 0 (default 37) 
defc LINL32 = $F3AF	;1 Width for SCREEN 1 (default 29) 
defc LINLEN = $F3B0	;1 Width for the current text mode 
defc CRTCNT = $F3B1	;1 Number of lines on screen 
defc CLMLST = $F3B2	;1 Column space. It’s uncertain what this address actually stores 
defc TXTNAM = $F3B3	;2 BASE(0) - SCREEN 0 name table 
defc TXTCOL = $F3B5	;2 BASE(1) - SCREEN 0 color table 
defc TXTCGP = $F3B7	;2 BASE(2) - SCREEN 0 character pattern table 
defc TXTATR = $F3B9	;2 BASE(3) - SCREEN 0 Sprite Attribute Table 
defc TXTPAT = $F3BB	;2 BASE(4) - SCREEN 0 Sprite Pattern Table 
defc T32NAM = $F3B3	;2 BASE(5) - SCREEN 1 name table 
defc T32COL = $F3B5	;2 BASE(6) - SCREEN 1 color table 
defc T32CGP = $F3B7	;2 BASE(7) - SCREEN 1 character pattern table 
defc T32ATR = $F3B9	;2 BASE(8) - SCREEN 1 sprite attribute table 
defc T32PAT = $F3BB	;2 BASE(9) - SCREEN 1 sprite pattern table 
defc GRPNAM = $F3B3	;2 BASE(10) - SCREEN 2 name table 
defc GRPCOL = $F3B5	;2 BASE(11) - SCREEN 2 color table 
defc GRPCGP = $F3B7	;2 BASE(12) - SCREEN 2 character pattern table 
defc GRPATR = $F3B9	;2 BASE(13) - SCREEN 2 sprite attribute table 
defc GRPPAT = $F3BB	;2 BASE(14) - SCREEN 2 sprite pattern table 
defc MLTNAM = $F3B3	;2 BASE(15) - SCREEN 3 name table 
defc MLTCOL = $F3B5	;2 BASE(16) - SCREEN 3 color table 
defc MLTCGP = $F3B7	;2 BASE(17) - SCREEN 3 character pattern table 
defc MLTATR = $F3B9	;2 BASE(18) - SCREEN 3 sprite attribute table 
defc MLTPAT = $F3BB	;2 BASE(19) - SCREEN 3 sprite pattern table 
defc CLIKSW = $F3DB	;press click status
defc CSRY = $F3DC	;1 Current row-position of the cursor 
defc CSRX = $F3DD	;1 Current column-position of the cursor 
defc CNSDFG = $F3DE	;function keys status
defc RG0SAV = $F3DF	;1 Content of VDP(0) register (R#0) 
defc RG1SAV = $F3E0	;1 Content of VDP(1) register (R#1) 
defc RG2SAV = $F3E1	;1 Content of VDP(2) register (R#2) 
defc RG3SAV = $F3E2	;1 Content of VDP(3) register (R#3) 
defc RG4SAV = $F3E3	;1 Content of VDP(4) register (R#4) 
defc RG5SAV = $F3E4	;1 Content of VDP(5) register (R#5) 
defc RG6SAV = $F3E5	;1 Content of VDP(6) register (R#6) 
defc RG7SAV = $F3E6	;1 Content of VDP(7) register (R#7) 
defc STATFL = $F3E7	;1 Content of VDP(8) status register (S#0) 
defc TRGFLG = $F3E8	;1 Information about trigger buttons and space bar state 
defc FORCLR = $F3E9	;1 Foreground color 
defc BAKCLR = $F3EA	;1 Background color 
defc BDRCLR = $F3EB	;1 Border color 
defc MAXUPD = $F3EC	;3 Jump instruction used by Basic LINE command. The routines used are: RIGHTC, LEFTC, UPC and DOWNC 
defc MINUPD = $F3EF	;3 Jump instruction used by Basic LINE command. The routines used are: RIGHTC, LEFTC, UPC and DOWNC 
defc ATRBYT = $F3F2	;1 Attribute byte (for graphical routines it’s used to read the color) 
defc QUEUES = $F3F3	;2 Address of the queue table 
defc FRCNEW = $F3F5	;1 CLOAD flag
defc SCNCNT = $F3F6	;1 Key scan timing
defc REPCNT = $F3F7	;1 This is the key repeat delay counter
defc PUTPNT = $F3F8	;2 Address in the keyboard buffer where a character will be written 
defc GETPNT = $F3FA	;2 Address in the keyboard buffer where the next character is read 
defc CS120 = $F3FC	;5 Cassette I/O parameters to use for 1200 baud 
defc CS240 = $F401	;5 Cassette I/O parameters to use for 2400 baud 
defc LOW = $F406	;2 Signal delay when writing a 0 to tape 
defc HIGH = $F408	;2 Signal delay when writing a 1 to tape 
defc HEADER = $F40A	;1 Delay of tape header (sync.) block 
defc ASPCT1 = $F40B	;2 Horizontal / Vertical aspect for CIRCLE command 
defc ASPCT2 = $F40D	;2 Horizontal / Vertical aspect for CIRCLE command 
defc ENDPRG = $F40F	;5 Pointer for the RESUME NEXT command 
defc ERRFLG = $F414	;1 Basic Error code 
defc LPTPOS = $F415	;1 Position of the printer head
defc PRTFLG = $F416	;1 Printer output flag is read by OUTDO
defc NTMSXP = $F417	;1 Printer type is read by OUTDO. SCREEN ,,,n writes to this address
defc RAWPRT = $F418	;1 Raw printer output is read by OUTDO
defc VLZADR = $F419	;2 Address of data that is temporarilly replaced by ‘O’ when Basic function VAL("") is running 
defc VLZDAT = $F41B	;1 Original value that was in the address pointed to with VLZADR 
defc CURLIN = $F41C	;2 Line number the Basic interpreter is working on, in direct mode it will be filled with #FFFF
defc KBUF   = $F41F
defc STREND = $F6C6
defc SLOTID = $F91F	;1 Character set SlotID 
defc CHFONT = $F920	;2 Character set address 
defc ACPAGE = $FAF6
defc EXBRSA = $FAF8	;1 Slot address of the SUBROM (EXtended Bios-Rom Slot Address) 
defc DRVINF = $FB21	;1 Nr. of drives connected to disk interface 1 
defc DRVINF1 = $FB21	;1 Nr. of drives connected to disk interface 1 
defc DISKIF1 = $FB22	;1 Slot address of disk interface 1 
defc DRVINF2 = $FB23	;1 Nr. of drives connected to disk interface 2 
defc DISKIF2 = $FB24	;1 Slot address of disk interface 2 
defc DRVINF3 = $FB25	;1 Nr. of drives connected to disk interface 3 
defc DISKIF3 = $FB26	;1 Slot address of disk interface 3 
defc DRVINF4 = $FB27	;1 Nr. of drives connected to disk interface 4 
defc DISKIF4 = $FB28	;1 Slot address of disk interface 4 
defc BASROM = $FBB1

defc SYSMEM = $FC4A	;start address of system memory

defc SCRMOD = $FCAF
defc BRDATR = $FCB2
defc GRPACX = $FCB7
defc GRPACY = $FCB9

; FCC1H  --  slot-address of main-ROM
defc EXPTBL = $FCC1	;1 Slot 0: #80 = expanded, 0 = not expanded. Also slot address of the main BIOS-ROM. 
defc EXP0 = $FCC1	;1 Expansion Slot 0
defc EXP1 = $FCC2	;1 Expansion Slot 1
defc EXP2 = $FCC3	;1 Expansion Slot 2
defc EXP3 = $FCC4	;1 Expansion Slot 3
defc SLTTBL = $FCC5	;1 Mirror of slot 0 secondary slot selection register. 
defc SLT0 = $FCC5	;1 Mirror of slot 0...
defc SLT1 = $FCC6	;1 Mirror of slot 1...
defc SLT2 = $FCC7	;1 Mirror of slot 2...
defc SLT3 = $FCC8	;1 Mirror of slot 3...



; BASIC locations

defc WARM_BT = $409B	; address of "warm boot" BASIC interpreter

defc DOTLINE = $58FC
defc DOBOXF  = $58C1
defc BOXLIN  = $5912
defc DO_CIRC = $5B19

defc PSET    = $57F5	; (X = (BC), Y = (DE))
defc DOPSET  = $57F5

defc N_PAINT = $266E	; (color = (A), X = (BC), Y = (DE)) -
defc O_PAINT = $59E3	; - init: CALL 0129H (PNTINI in msxbios), then CALL PAINT


lston

